        <div class="container-fluid">
        <div class="row-fluid">
<div id="videos">
        <div id="myPublisherDiv"></div>
        <div id="otherUser"></div>
</div>

        <script type="text/javascript">
          // Initialize API key, session, and token...
          // Think of a session as a room, and a token as the key to get in to the room
          // Sessions and tokens are generated on your server and passed down to the client
          var apiKey = "22586622";
          var sessionId = "<%=@interviewee_session.room.openTokID%>";
          var token = "<%= @token %>" ;

          // Enable console logs for debugging
TB.setLogLevel(TB.DEBUG);

// Initialize session, set up event listeners, and connect
var session = TB.initSession(sessionId);
session.addEventListener('sessionConnected', sessionConnectedHandler);
session.addEventListener('streamCreated', streamCreatedHandler);
session.connect(apiKey, token);
function sessionConnectedHandler(event) {
  var publisher = TB.initPublisher(apiKey, 'myPublisherDiv');
  session.publish(publisher);
  var pub = document.getElementById(publisher.id);
  pub.style.width = "100px";
  pub.style.height = "66px";
  pub.style.position = "absolute";
  pub.style.z-index = "2";
  

  // Subscribe to streams that were in the session when we connected
  subscribeToStreams(event.streams);
}

function streamCreatedHandler(event) {
  // Subscribe to any new streams that are created
  subscribeToStreams(event.streams);
}

function subscribeToStreams(streams) {
  for (var i = 0; i < streams.length; i++) {
    // Make sure we don't subscribe to ourself
    if (streams[i].connection.connectionId == session.connection.connectionId) {
      return;
    }

    // Subscribe to the stream
    var oUser =session.subscribe(streams[i], "otherUser");
    var user = document.getElementById(oUser.id);
    user.style.width = "300px";
    user.style.height = "200px";
    user.style.position = "absolute";
    user.style.z-index = "1";
  }
}
</script>
